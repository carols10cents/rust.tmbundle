<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>rs</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~R</string>
	<key>name</key>
	<string>Rust</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#block_doc_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_doc_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_comment</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\{)</string>
			<key>name</key>
			<string>punctuation.section.scope.begin.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\})</string>
			<key>name</key>
			<string>punctuation.section.scope.end.rust</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>#\!?\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attribute.begin.rust</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.attribute.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.attribute.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_like_literals</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_like_literals</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[0-9][0-9_]*\.[0-9][0-9_]*([eE][+-][0-9_]+)?(f32|f64)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[0-9][0-9_]*(\.[0-9][0-9_]*)?[eE][+-][0-9_]+(f32|f64)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[0-9][0-9_]*(\.[0-9][0-9_]*)?([eE][+-][0-9_]+)?(f32|f64)\b</string>
			<key>name</key>
			<string>constant.numeric.float.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[0-9][0-9_]*([ui](8|16|32|64|128|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b0x[a-fA-F0-9_]+([ui](8|16|32|64|128|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b0o[0-7_]+([ui](8|16|32|64|128|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b0b[01_]+([ui](8|16|32|64|128|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.binary.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bconst\b</string>
			<key>name</key>
			<string>storage.modifier.const.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bstatic\b</string>
			<key>name</key>
			<string>storage.modifier.static.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(priv|pub)\b</string>
			<key>name</key>
			<string>storage.modifier.visibility.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.boolean.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(break|continue|do|else|if|in|for|loop|match|return|while)\b</string>
			<key>name</key>
			<string>keyword.control.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\basync\b</string>
			<key>name</key>
			<string>keyword.other.async.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bawait\b</string>
			<key>name</key>
			<string>keyword.other.await.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bcrate\b</string>
			<key>name</key>
			<string>keyword.other.crate.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bdyn\b</string>
			<key>name</key>
			<string>keyword.other.dyn.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bextern\b</string>
			<key>name</key>
			<string>keyword.other.extern.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\blet\b</string>
			<key>name</key>
			<string>keyword.other.let.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bmod\b</string>
			<key>name</key>
			<string>keyword.other.mod.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bmove\b</string>
			<key>name</key>
			<string>keyword.other.move.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bproc\b</string>
			<key>name</key>
			<string>keyword.other.proc.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bref\b</string>
			<key>name</key>
			<string>keyword.other.ref.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bsuper\b</string>
			<key>name</key>
			<string>keyword.other.super.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\btype\b</string>
			<key>name</key>
			<string>keyword.other.type.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bunsafe\b</string>
			<key>name</key>
			<string>keyword.other.unsafe.rust</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\buse\b</string>
			<key>name</key>
			<string>keyword.other.use.rust</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#sigils</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storage_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#std_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#kinds</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#self</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#mut</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#box</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lifetime</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#ref_lifetime</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\+|-|/|\*|=|\^|&amp;|\||!|&gt;|&lt;|%|::|\.\.|\bas\b)</string>
			<key>name</key>
			<string>keyword.operator.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Standard library macro</string>
			<key>match</key>
			<string>\b(log|error|warn|info|debug|log_enabled|fail|assert|assert_eq|unreachable|unimplemented|format|write|writeln|print|println|local_data_key|try|vec|select)!</string>
			<key>name</key>
			<string>support.function.std.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Standard library type variant</string>
			<key>match</key>
			<string>\b(Some|None|Ok|Err)\b</string>
			<key>name</key>
			<string>support.constant.std.rust</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.macro.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Invocation of a macro</string>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*\!)\s*[({\[]</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.rust.call</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.rust</string>
				</dict>
				<key>3</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#storage_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#std_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
					</array>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function call</string>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*)(::&lt;(.*)&gt;)?\s*\(</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.macro.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.macro.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Macro definition</string>
			<key>match</key>
			<string>\b(macro_rules!)\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*\{</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(fn)\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fn.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function definition</string>
			<key>end</key>
			<string>(?[\{;])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(enum|struct|trait|type)\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Type declaration</string>
			<key>end</key>
			<string>(?[\{;])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(impl)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Implementation</string>
			<key>end</key>
			<string>(?\{)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>:</string>
			<key>comment</key>
			<string>Variable declaration</string>
			<key>end</key>
			<string>[=;,\)\|]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block_comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.begin.rust</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>block_doc_comment</key>
		<dict>
			<key>begin</key>
			<string>/\*[!\*][^\*]</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.begin.rust</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.documentation.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>box</key>
		<dict>
			<key>match</key>
			<string>\bbox\b</string>
			<key>name</key>
			<string>storage.modifier.box.rust</string>
		</dict>
		<key>escaped_ascii_character</key>
		<dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html ASCII_ESCAPE</string>
			<key>match</key>
			<string>\\(x[0-7]\h|n|r|t|\\|0)</string>
			<key>name</key>
			<string>constant.character.escape.rust</string>
		</dict>
		<key>escaped_byte</key>
		<dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html BYTE_ESCAPE</string>
			<key>match</key>
			<string>\\(x\h{2}|n|r|t|\\|0)</string>
			<key>name</key>
			<string>constant.character..escape.rust</string>
		</dict>
		<key>escaped_quote</key>
		<dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html QUOTE_ESCAPE</string>
			<key>match</key>
			<string>\\('|")</string>
			<key>name</key>
			<string>constant.character.escape.rust</string>
		</dict>
		<key>escaped_unicode_character</key>
		<dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html UNICODE_ESCAPE</string>
			<key>match</key>
			<string>\\u\{(?:0?(?:\h_*){1,5}|1_*0_*(?:\h_*){4})\}</string>
			<key>name</key>
			<string>constant.character.escape.rust</string>
		</dict>
		<key>kinds</key>
		<dict>
			<key>comment</key>
			<string>Built-in trait (kind)</string>
			<key>match</key>
			<string>\b(Send|Sized|Copy|Share)\b</string>
			<key>name</key>
			<string>support.type.kind.rust</string>
		</dict>
		<key>lifetime</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.lifetime.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Named lifetime</string>
			<key>match</key>
			<string>'([a-zA-Z_][a-zA-Z0-9_]*)\b[^']</string>
			<key>name</key>
			<string>storage.modifier.lifetime.rust</string>
		</dict>
		<key>line_comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Single-line comment</string>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.rust</string>
		</dict>
		<key>line_doc_comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Single-line documentation comment</string>
			<key>match</key>
			<string>(//)[!/][^/].*$\n?</string>
			<key>name</key>
			<string>comment.line.documentation.rust</string>
		</dict>
		<key>literal_byte</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.rust</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html#byte-literals BYTE_LITERAL</string>
			<key>match</key>
			<string>(b')(\\(?:'|"|x\h{2}|n|r|t|\\|0))(')</string>
			<key>name</key>
			<string>string.quoted.single.byte.rust</string>
		</dict>
		<key>literal_byte_string</key>
		<dict>
			<key>begin</key>
			<string>b"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html#byte-literals BYTE_LITERAL</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.byte.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_quote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_byte</string>
				</dict>
			</array>
		</dict>
		<key>literal_character</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.rust</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html#character-literals CHAR_LITERAL</string>
			<key>match</key>
			<string>(')(?:(\\(?:'|"|x[0-7]\h|n|r|t|\\|0|u\{(?:0?(?:\h_*){1,5}|1_*0_*(?:\h_*){4})\}))|[^'"\n\r\t\\\0])(')</string>
			<key>name</key>
			<string>string.quoted.single.rust</string>
		</dict>
		<key>literal_raw_byte_string</key>
		<dict>
			<key>begin</key>
			<string>br(#*)"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html#raw-byte-string-literals RAW_BYTE_STRING_LITERAL</string>
			<key>end</key>
			<string>"\1</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.byte.raw.rust</string>
		</dict>
		<key>literal_raw_string</key>
		<dict>
			<key>begin</key>
			<string>r(#*)"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html#raw-string-literals RAW_STRING_LITERAL</string>
			<key>end</key>
			<string>"\1</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.raw.rust</string>
		</dict>
		<key>literal_string</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>https://doc.rust-lang.org/reference/tokens.html#string-literals STRING_LITERAL</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rust</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_quote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_ascii_character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escaped_unicode_character</string>
				</dict>
			</array>
		</dict>
		<key>mut</key>
		<dict>
			<key>comment</key>
			<string>Mutable storage modifier</string>
			<key>match</key>
			<string>\bmut\b</string>
			<key>name</key>
			<string>storage.modifier.mut.rust</string>
		</dict>
		<key>ref_lifetime</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.lifetime.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.lifetime.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Reference with named lifetime</string>
			<key>match</key>
			<string>&amp;('([a-zA-Z_][a-zA-Z0-9_]*))\b</string>
		</dict>
		<key>self</key>
		<dict>
			<key>match</key>
			<string>\bself\b</string>
			<key>name</key>
			<string>variable.language.self.rust</string>
		</dict>
		<key>sigils</key>
		<dict>
			<key>comment</key>
			<string>Sigil</string>
			<key>match</key>
			<string>[&amp;~@*](?=[a-zA-Z0-9_\(\[\|\"]+)</string>
			<key>name</key>
			<string>keyword.operator.sigil.rust</string>
		</dict>
		<key>std_types</key>
		<dict>
			<key>comment</key>
			<string>Standard library type</string>
			<key>match</key>
			<string>\b(Box|Vec|StrBuf|Path|Option|Result|Reader|Writer|Stream|Seek|Buffer|IoError|IoResult|Sender|SyncSender|Receiver|Cell|RefCell|Any)\b</string>
			<key>name</key>
			<string>support.class.std.rust</string>
		</dict>
		<key>storage_types</key>
		<dict>
			<key>comment</key>
			<string>Built-in type</string>
			<key>match</key>
			<string>\b(bool|char|usize|isize|u8|u16|u32|u64|u128|i8|i16|i32|i64|i128|f32|f64|str|Self)\b</string>
			<key>name</key>
			<string>storage.type.rust</string>
		</dict>
		<key>string_like_literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literal_character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal_raw_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal_byte</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal_byte_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal_raw_byte_string</string>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>comment</key>
			<string>struct or enum name</string>
			<key>match</key>
			<string>\b([A-Z][a-z]*([A-Z][a-z]*|[0-9])*)\b</string>
			<key>name</key>
			<string>support.class.rust</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.rust</string>
	<key>uuid</key>
	<string>E54FA931-0668-4496-8922-F91520AD02B3</string>
</dict>
</plist>
